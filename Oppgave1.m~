clear all;
cow = double(imread('cow.png'));
%test_bilde = double(imread('eight.png'));
info = imfinfo('cow.png');

middel_filter_3 = (1 / (3 ^ 2 )) * ones(3);
middel_filter_4 = (1 / (4 ^ 2 )) * ones(4);
middel_filter_5 = (1 / (5 ^ 2 )) * ones(5);
middel_filter_6 = (1 / (6 ^ 2 )) * ones(6);
middel_filter_7 = (1 / (7 ^ 2 )) * ones(7);

%% Oppgave 1.1 Conv
cow_conv2 = conv2(cow, middel_filter_5);

figure('Name', 'cow_conv2');
image(uint8(cow_conv2));
axis image;
colormap(gray(255));
print('1-1-cow_conv2', '-dpng');

%% Oppgave 1.1 FFT2
cow_fftd = fft2(cow);
filter_fftd = fft2(middel_filter_5, info.Height, info.Width);
cow_filtered = cow_fftd .* filter_fftd;
cow_fft2 = ifft2(cow_filtered);

figure('Name', 'cow_fft2');
image(uint8(cow_fft2));
axis image;
colormap(gray(255));
print('1-1-cow_fft2', '-dpng');

%% Oppgave 1.3
convoluted = zeros(1, 13);
fourierd = zeros(1, 13);
[convoluted(1), fourierd(1)] = dobbelt_filtrering(cow, ((1 / (1 ^ 2 )) * ones(1)));
[convoluted(2), fourierd(2)] = dobbelt_filtrering(cow, ((1 / (2 ^ 2 )) * ones(2)));
[convoluted(3), fourierd(3)] = dobbelt_filtrering(cow, ((1 / (3 ^ 2 )) * ones(3)));
[convoluted(4), fourierd(4)] = dobbelt_filtrering(cow, ((1 / (4 ^ 2 )) * ones(4)));
[convoluted(5), fourierd(5)] = dobbelt_filtrering(cow, ((1 / (5 ^ 2 )) * ones(5)));
[convoluted(6), fourierd(6)] = dobbelt_filtrering(cow, ((1 / (6 ^ 2 )) * ones(6)));
[convoluted(7), fourierd(7)] = dobbelt_filtrering(cow, ((1 / (7 ^ 2 )) * ones(7)));
[convoluted(8), fourierd(8)] = dobbelt_filtrering(cow, ((1 / (8 ^ 2 )) * ones(8)));
[convoluted(9), fourierd(9)] = dobbelt_filtrering(cow, ((1 / (9 ^ 2 )) * ones(9)));
[convoluted(10), fourierd(10)] = dobbelt_filtrering(cow, ((1 / (10 ^ 2 )) * ones(10)));
[convoluted(11), fourierd(11)] = dobbelt_filtrering(cow, ((1 / (11 ^ 2 )) * ones(11)));
[convoluted(12), fourierd(12)] = dobbelt_filtrering(cow, ((1 / (12 ^ 2 )) * ones(12)));
[convoluted(13), fourierd(13)] = dobbelt_filtrering(cow, ((1 / (13 ^ 2 )) * ones(13)));

plot(convoluted);
hold on;
plot(fourird);
hold off;

